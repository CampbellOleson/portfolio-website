{"ast":null,"code":"var _jsxFileName = \"/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/AmpCamp.jsx\";\nimport React from \"react\";\nimport Choose from \"../../assets/screenshots/ampcamp/ac-choose.png\";\nimport AlbumShow from \"../../assets/screenshots/ampcamp/ac-albumshow.png\";\nimport Profile from \"../../assets/screenshots/ampcamp/ac-profile.png\";\nimport Search from \"../../assets/screenshots/ampcamp/ac-search.png\";\nimport SignUp from \"../../assets/screenshots/ampcamp/ac-signup.png\";\nimport Upload from \"../../assets/screenshots/ampcamp/ac-upload.png\";\nimport Home from \"../../assets/screenshots/ampcamp/ac-home.png\";\nimport UploadLoop from \"../../assets/screenshots/ampcamp/ac-uploadloop.png\";\nimport UploadError from \"../../assets/screenshots/ampcamp/ac-uploaderror.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/ampcamp.css\";\n\nconst AmpCamp = () => {\n  return React.createElement(\"div\", {\n    id: \"ampcamp-wrapper\",\n    className: \"cs-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"cs-topper cs-white-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"vert-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"cs-topper-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"AmpCamp\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Campbell Oleson\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"September 2019\")), React.createElement(\"summary\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I built a music-sharing website that allows users to upload, download, and stream songs and albums. AmpCamp\\u2019s main purpose is to empower musicians to easily share their music with others, and to give listeners a way to discover new music.\"))), React.createElement(\"div\", {\n    className: \"vert-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"ac-topper-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Home,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Assignment\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"AmpCamp is the third full-stack web application that I built while studying at App Academy. I worked on this project with two other students from my cohort. Like myself, one of my teammates was a musician, so we figured that a music streaming service was the perfect project to take on.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Planning\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Before we began development, my team and I laid out our vision for AmpCamp. We determined that AmpCamp should provide listeners with an easy way to discover new music. We also wanted our website to cater to burgeoning musicians, so we chose to integrate a user-friendly way to upload albums.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"We decided that our AmpCamp\\u2019s core features would include a home page for discovering music, an artist profile page, an album show page, an album upload page, and a search feature for finding artists, albums, and songs.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Before we started writing code, my team and I laid out the architecture for the backend API and application state of our website. Finally, we created wireframe prototypes for the frontend views that our app would include.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"As with my other projects, my team and I used GitHub to manage version control. Before anyone merged a branch, we would come together and test the new feature to make sure that it integrated seamlessly with everything else. I also set up a Trello board to help my team divide and organize responsibilities for this project.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Features and Functionality\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"We built AmpCamp with NodeJS on the backend and MongoDB as the database. We chose MongoDB because we knew that most of our data would be non-relational, and we wanted to get started with minimal setup.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"On the frontend, we leveraged ReactJS for the user interface and Apollo GraphQL to send requests to our backend API. We also integrated Amazon Web Services S3 Bucket for hosting photos and audio files.\"), React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"The homepage of AmpCamp enables users to discover new music via \\u201CAmpCamp Daily Picks\\u201D, which is a scrolling banner list of album recommendations. On the homepage, users can also search for artists, albums, and songs. When you mouseover an album on the homepage, a play pause button appears and allows you to start listening to the album.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Search,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"On an artist\\u2019s profile page, you can view all of the albums and songs that an artist has released. Clicking on an album will redirect you to the album show page that displays all the album\\u2019s songs. Users listen to songs by clicking on song index items in the list. When listening to a particular song, you can see the song name, artist name, and album cover art displayed on the audio playbar at the bottom of the screen.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Profile,\n    alt: \"AmpCamp profile page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: AlbumShow,\n    alt: \"AmpCamp show page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"I designed a responsive album-upload interface leveraging ReactJS that constructs an \\u201Calbum preview\\u201D in real time using the album information entered by the user. This allows artists to make sure that every aspect of their album fits together seamlessly before uploading it.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Upload,\n    alt: \"AmpCamp upload page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"The album-upload component of AmpCamp asynchronously uploads the audio files to AWS S3 Bucket, before saving the collection of songs with their respective audio URLs to the database.\")))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: UploadLoop,\n    alt: \"Upload loop screenshot\",\n    className: \"cs-img-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-small-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Choose,\n    alt: \"Search Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: SignUp,\n    alt: \"Requests Modal Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Challenges\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Creating AmpCamp\\u2019s album upload page challenged me to consider the importance of good error handling in regards to user experience. Initially, I had my website redirect to the artist show page immediately after an artist submitted an album. Occasionally, albums would fail to upload to AWS S3 Bucket part of the way through, leaving the artist with a semi-uploaded album.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"I improved the user experience of this feature by making it so the competent waits until the entire album had been uploaded to S3 before redirecting to the artists show page. If the upload fails, the artist will get a user-friendly error message prompting them to try their upload again in a moment. The upload-upload component also keeps its local state even when an upload fails, so artists don\\u2019t have to reconstruct the album with every upload attempt.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: UploadError,\n    alt: \"Requests Modal Screenshot\",\n    className: \"cs-img-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Outcome\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Building AmpCamp was an incredible learning experience. It exposed me to some of the more advanced, DevOps-related technologies of web development, such as Docker and AWS. It also gave me experience collaborating with others on an advanced project with lots of interconnected pieces, and managing responsibilities accordingly.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"AmpCamp turned out to be fully-functional music sharing site with an intuitive user interface, and a robust framework for asynchronous uploading files to AWS. Anyone can sign up for AmpCamp and upload music of their own!\"))));\n};\n\nexport default AmpCamp;","map":{"version":3,"sources":["/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/AmpCamp.jsx"],"names":["React","Choose","AlbumShow","Profile","Search","SignUp","Upload","Home","UploadLoop","UploadError","AmpCamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Choose from \"../../assets/screenshots/ampcamp/ac-choose.png\";\nimport AlbumShow from \"../../assets/screenshots/ampcamp/ac-albumshow.png\";\nimport Profile from \"../../assets/screenshots/ampcamp/ac-profile.png\";\nimport Search from \"../../assets/screenshots/ampcamp/ac-search.png\";\nimport SignUp from \"../../assets/screenshots/ampcamp/ac-signup.png\";\nimport Upload from \"../../assets/screenshots/ampcamp/ac-upload.png\";\nimport Home from \"../../assets/screenshots/ampcamp/ac-home.png\";\nimport UploadLoop from \"../../assets/screenshots/ampcamp/ac-uploadloop.png\";\nimport UploadError from \"../../assets/screenshots/ampcamp/ac-uploaderror.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/ampcamp.css\";\n\nconst AmpCamp = () => {\n  return (\n    <div id=\"ampcamp-wrapper\" className=\"cs-wrapper\">\n      <div className=\"cs-nav\" />\n      <section className=\"cs-topper cs-white-container\">\n        <div className=\"vert-center\">\n          <section className=\"cs-topper-info\">\n            <header>AmpCamp</header>\n            \n            <div>\n              <p>Campbell Oleson</p>\n              <p>September 2019</p>\n            </div>\n            <summary>\n              I built a music-sharing website that allows users to upload,\n              download, and stream songs and albums. AmpCamp’s main purpose is\n              to empower musicians to easily share their music with others, and\n              to give listeners a way to discover new music.\n            </summary>\n          </section>\n        </div>\n        <div className=\"vert-bottom\">\n          <div id=\"ac-topper-img\" />\n        </div>\n      </section>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Home} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Assignment</header>\n          <article>\n            AmpCamp is the third full-stack web application that I built while\n            studying at App Academy. I worked on this project with two other\n            students from my cohort. Like myself, one of my teammates was a\n            musician, so we figured that a music streaming service was the\n            perfect project to take on.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Planning</header>\n          <article>\n            Before we began development, my team and I laid out our vision for\n            AmpCamp. We determined that AmpCamp should provide listeners with an\n            easy way to discover new music. We also wanted our website to cater\n            to burgeoning musicians, so we chose to integrate a user-friendly\n            way to upload albums.\n          </article>\n          <article>\n            We decided that our AmpCamp’s core features would include a home\n            page for discovering music, an artist profile page, an album show\n            page, an album upload page, and a search feature for finding\n            artists, albums, and songs.\n          </article>\n          <article>\n            Before we started writing code, my team and I laid out the\n            architecture for the backend API and application state of our\n            website. Finally, we created wireframe prototypes for the frontend\n            views that our app would include.\n          </article>\n          <article>\n            As with my other projects, my team and I used GitHub to manage\n            version control. Before anyone merged a branch, we would come\n            together and test the new feature to make sure that it integrated\n            seamlessly with everything else. I also set up a Trello board to\n            help my team divide and organize responsibilities for this project.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Features and Functionality</header>\n          <article>\n            We built AmpCamp with NodeJS on the backend and MongoDB as the\n            database. We chose MongoDB because we knew that most of our data\n            would be non-relational, and we wanted to get started with minimal\n            setup.\n          </article>\n          <article>\n            On the frontend, we leveraged ReactJS for the user interface and\n            Apollo GraphQL to send requests to our backend API. We also\n            integrated Amazon Web Services S3 Bucket for hosting photos and\n            audio files.\n          </article>\n          <article className=\"cs-bmo\">\n            The homepage of AmpCamp enables users to discover new music via\n            “AmpCamp Daily Picks”, which is a scrolling banner list of album\n            recommendations. On the homepage, users can also search for artists,\n            albums, and songs. When you mouseover an album on the homepage, a\n            play pause button appears and allows you to start listening to the\n            album.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Search} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            On an artist’s profile page, you can view all of the albums and\n            songs that an artist has released. Clicking on an album will\n            redirect you to the album show page that displays all the album’s\n            songs. Users listen to songs by clicking on song index items in the\n            list. When listening to a particular song, you can see the song\n            name, artist name, and album cover art displayed on the audio\n            playbar at the bottom of the screen.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\">\n        <img src={Profile} alt=\"AmpCamp profile page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={AlbumShow} alt=\"AmpCamp show page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            I designed a responsive album-upload interface leveraging ReactJS\n            that constructs an “album preview” in real time using the album\n            information entered by the user. This allows artists to make sure\n            that every aspect of their album fits together seamlessly before\n            uploading it.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Upload} alt=\"AmpCamp upload page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            <article>\n              The album-upload component of AmpCamp asynchronously uploads the\n              audio files to AWS S3 Bucket, before saving the collection of\n              songs with their respective audio URLs to the database.\n            </article>\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-wrapper cs-img-margin\">\n          <img\n            src={UploadLoop}\n            alt=\"Upload loop screenshot\"\n            className=\"cs-img-medium\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-small-wrapper cs-img-margin\">\n          <img src={Choose} alt=\"Search Screenshot\" className=\"cs-img-small\" />\n          <img\n            src={SignUp}\n            alt=\"Requests Modal Screenshot\"\n            className=\"cs-img-small\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Challenges</header>\n          <article>\n            Creating AmpCamp’s album upload page challenged me to consider the\n            importance of good error handling in regards to user experience.\n            Initially, I had my website redirect to the artist show page\n            immediately after an artist submitted an album. Occasionally, albums\n            would fail to upload to AWS S3 Bucket part of the way through,\n            leaving the artist with a semi-uploaded album.\n          </article>\n          <article>\n            I improved the user experience of this feature by making it so the\n            competent waits until the entire album had been uploaded to S3\n            before redirecting to the artists show page. If the upload fails,\n            the artist will get a user-friendly error message prompting them to\n            try their upload again in a moment. The upload-upload component also\n            keeps its local state even when an upload fails, so artists don’t\n            have to reconstruct the album with every upload attempt.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-wrapper cs-img-margin\">\n          <img\n            src={UploadError}\n            alt=\"Requests Modal Screenshot\"\n            className=\"cs-img-medium\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Outcome</header>\n          <article>\n            Building AmpCamp was an incredible learning experience. It exposed\n            me to some of the more advanced, DevOps-related technologies of web\n            development, such as Docker and AWS. It also gave me experience\n            collaborating with others on an advanced project with lots of\n            interconnected pieces, and managing responsibilities accordingly.\n          </article>\n          <article>\n            AmpCamp turned out to be fully-functional music sharing site with an\n            intuitive user interface, and a robust framework for asynchronous\n            uploading files to AWS. Anyone can sign up for AmpCamp and upload\n            music of their own!\n          </article>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AmpCamp;\n"]},"metadata":{},"sourceType":"module"}