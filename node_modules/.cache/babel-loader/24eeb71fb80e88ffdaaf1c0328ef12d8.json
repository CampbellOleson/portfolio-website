{"ast":null,"code":"var _jsxFileName = \"/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/AmpCamp.jsx\";\nimport React from \"react\";\nimport Choose from \"../../assets/screenshots/ampcamp/ac-choose.png\";\nimport AlbumShow from \"../../assets/screenshots/ampcamp/ac-albumshow.png\";\nimport Profile from \"../../assets/screenshots/ampcamp/ac-profile.png\";\nimport Search from \"../../assets/screenshots/ampcamp/ac-search.png\";\nimport SignUp from \"../../assets/screenshots/ampcamp/ac-signup.png\";\nimport Upload from \"../../assets/screenshots/ampcamp/ac-upload.png\";\nimport Home from \"../../assets/screenshots/ampcamp/ac-home.png\";\nimport UploadLoop from \"../../assets/screenshots/ampcamp/ac-uploadloop.png\";\nimport UploadError from \"../../assets/screenshots/ampcamp/ac-uploaderror.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/ampcamp.css\";\n\nconst AmpCamp = () => {\n  return React.createElement(\"div\", {\n    id: \"ampcamp-wrapper\",\n    className: \"cs-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"cs-topper cs-white-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"vert-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"cs-topper-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"AmpCamp\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Campbell Oleson\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"September 2019\")), React.createElement(\"summary\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"I built a music-sharing website that allows users to upload, download, and stream songs and albums. AmpCamp\\u2019s main purpose is to empower musicians to easily share their music with others, and to give listeners a way to discover new music.\"))), React.createElement(\"div\", {\n    className: \"vert-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"ac-topper-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Home,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Assignment\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"AmpCamp is the third full-stack web application that I built while studying at App Academy. I worked on this project with two other students from my cohort. Like myself, one of my teammates was a musician, so we figured that a music streaming service was the perfect project to take on.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Planning\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Before we began development, my team and I laid out our vision for AmpCamp. We determined that AmpCamp should provide listeners with an easy way to discover new music. We also wanted our website to cater to burgeoning musicians, so we chose to integrate a user-friendly way to upload albums.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"We decided that our AmpCamp\\u2019s core features would include a home page for discovering music, an artist profile page, an album show page, an album upload page, and a search feature for finding artists, albums, and songs.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Before we started writing code, my team and I laid out the architecture for the backend API and application state of our website. Finally, we created wireframe prototypes for the frontend views that our app would include.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"As with my other projects, my team and I used GitHub to manage version control. Before anyone merged a branch, we would come together and test the new feature to make sure that it integrated seamlessly with everything else. I also set up a Trello board to help my team divide and organize responsibilities for this project.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Features and Functionality\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"AmpCamp was implemented with NodeJS and MongoDB on the backend. We used the ExpressJS library for our backend server, and tested our API with Postman during development.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"On the front end, we leveraged React for the UI and Apollo GraphQL for requests to our backend API. AmpCamp also integrates AWS SW Bucket for hosting photos and audio files.\"), React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"The homepage of AmpCamp enables users to discover new music via \\u201CAmpCamp Daily Picks\\u201D, and search for artists, albums, and songs. A play/pause button on the homepage album index items allows users to listen to albums on the home page.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Search,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"If you navigate to an artists profile page, you can view all of the albums and songs that an artist has released. Similarly, there is an album show page that allows you to view the details of a particular album. You can stream music on an artists profile page, and a fixed music-player nav bar on the bottom of the page will display the name of the song that\\u2019s playing, the album artwork, and the artist that the song belongs to.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Profile,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: AlbumShow,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"I was responsible for creating the upload functionality of AmpCamp. If you sign up to AmpCamp as an artist, you can upload as many songs as you want as an album, complete with a description and a cover art. I used React to create a live preview of the album information, so an artist can look over the details of their album before uploading. This page asynchronously uploads audio files to AWS S3 Bucket, and then stores the URLs in MongoDB so the tracks can be played back later.\"))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Upload,\n    alt: \"AmpCamp Home Page\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: UploadLoop,\n    alt: \"Upload Error Screenshot\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"AmpCamp has fully functional upload and streaming capabilities, complete with a fluid and intuitive user interface.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-small-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Choose,\n    alt: \"Search Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: SignUp,\n    alt: \"Requests Modal Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Challenges\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"One of the challenges I faced when creating the album upload page on AmpCamp was asynchronous exception handling. Occasionally, albums would fail to upload to S3 part of the way through, leaving the artist with a semi-uploaded album. The way I got around this was to have the app stay on the upload page until the upload was complete, afterwhich, it would redirect to the new album show page. If the upload failed, the local state of the upload page would be preserved (so the user didn\\u2019t have to recreate the album) and a user-friendly error message would prompt the user to \\u201Ctry again in a moment\\u201D. This taught me the importance of good error handling as it pertains to user experience.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: UploadError,\n    alt: \"Requests Modal Screenshot\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Conclusion\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"The result of our work was a fully functional indie streaming site, with upload and download functionality. I plan to optimize AmpCamp further as time goes on, and I hope to make the audio player compatible with mobile devices as well. All in all, AmpCamp was a great learning experience, and it taught me how to create bigger web apps with more complex functionality.\"))));\n};\n\nexport default AmpCamp;","map":{"version":3,"sources":["/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/AmpCamp.jsx"],"names":["React","Choose","AlbumShow","Profile","Search","SignUp","Upload","Home","UploadLoop","UploadError","AmpCamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Choose from \"../../assets/screenshots/ampcamp/ac-choose.png\";\nimport AlbumShow from \"../../assets/screenshots/ampcamp/ac-albumshow.png\";\nimport Profile from \"../../assets/screenshots/ampcamp/ac-profile.png\";\nimport Search from \"../../assets/screenshots/ampcamp/ac-search.png\";\nimport SignUp from \"../../assets/screenshots/ampcamp/ac-signup.png\";\nimport Upload from \"../../assets/screenshots/ampcamp/ac-upload.png\";\nimport Home from \"../../assets/screenshots/ampcamp/ac-home.png\";\nimport UploadLoop from \"../../assets/screenshots/ampcamp/ac-uploadloop.png\";\nimport UploadError from \"../../assets/screenshots/ampcamp/ac-uploaderror.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/ampcamp.css\";\n\nconst AmpCamp = () => {\n  return (\n    <div id=\"ampcamp-wrapper\" className=\"cs-wrapper\">\n      <div className=\"cs-nav\" />\n      <section className=\"cs-topper cs-white-container\">\n        <div className=\"vert-center\">\n          <section className=\"cs-topper-info\">\n            <header>AmpCamp</header>\n            <div>\n              <p>Campbell Oleson</p>\n              <p>September 2019</p>\n            </div>\n            <summary>\n              I built a music-sharing website that allows users to upload,\n              download, and stream songs and albums. AmpCamp’s main purpose is\n              to empower musicians to easily share their music with others, and\n              to give listeners a way to discover new music.\n            </summary>\n          </section>\n        </div>\n        <div className=\"vert-bottom\">\n          <div id=\"ac-topper-img\" />\n        </div>\n      </section>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Home} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Assignment</header>\n          <article>\n            AmpCamp is the third full-stack web application that I built while\n            studying at App Academy. I worked on this project with two other\n            students from my cohort. Like myself, one of my teammates was a\n            musician, so we figured that a music streaming service was the\n            perfect project to take on.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Planning</header>\n          <article>\n            Before we began development, my team and I laid out our vision for\n            AmpCamp. We determined that AmpCamp should provide listeners with an\n            easy way to discover new music. We also wanted our website to cater\n            to burgeoning musicians, so we chose to integrate a user-friendly\n            way to upload albums.\n          </article>\n          <article>\n            We decided that our AmpCamp’s core features would include a home\n            page for discovering music, an artist profile page, an album show\n            page, an album upload page, and a search feature for finding\n            artists, albums, and songs.\n          </article>\n          <article>\n            Before we started writing code, my team and I laid out the\n            architecture for the backend API and application state of our\n            website. Finally, we created wireframe prototypes for the frontend\n            views that our app would include.\n          </article>\n          <article>\n            As with my other projects, my team and I used GitHub to manage\n            version control. Before anyone merged a branch, we would come\n            together and test the new feature to make sure that it integrated\n            seamlessly with everything else. I also set up a Trello board to\n            help my team divide and organize responsibilities for this project.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Features and Functionality</header>\n          <article>\n            AmpCamp was implemented with NodeJS and MongoDB on the backend. We\n            used the ExpressJS library for our backend server, and tested our\n            API with Postman during development.\n          </article>\n          <article>\n            On the front end, we leveraged React for the UI and Apollo GraphQL\n            for requests to our backend API. AmpCamp also integrates AWS SW\n            Bucket for hosting photos and audio files.\n          </article>\n          <article className=\"cs-bmo\">\n            The homepage of AmpCamp enables users to discover new music via\n            “AmpCamp Daily Picks”, and search for artists, albums, and songs. A\n            play/pause button on the homepage album index items allows users to\n            listen to albums on the home page.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Search} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            If you navigate to an artists profile page, you can view all of the\n            albums and songs that an artist has released. Similarly, there is an\n            album show page that allows you to view the details of a particular\n            album. You can stream music on an artists profile page, and a fixed\n            music-player nav bar on the bottom of the page will display the name\n            of the song that’s playing, the album artwork, and the artist that\n            the song belongs to.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\">\n        <img src={Profile} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={AlbumShow} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            I was responsible for creating the upload functionality of AmpCamp.\n            If you sign up to AmpCamp as an artist, you can upload as many songs\n            as you want as an album, complete with a description and a cover\n            art. I used React to create a live preview of the album information,\n            so an artist can look over the details of their album before\n            uploading. This page asynchronously uploads audio files to AWS S3\n            Bucket, and then stores the URLs in MongoDB so the tracks can be\n            played back later.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo cs-bmo\">\n        <img src={Upload} alt=\"AmpCamp Home Page\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-wrapper cs-img-margin\">\n          <img\n            src={UploadLoop}\n            alt=\"Upload Error Screenshot\"\n            className=\"cs-img\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            AmpCamp has fully functional upload and streaming capabilities,\n            complete with a fluid and intuitive user interface.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-small-wrapper cs-img-margin\">\n          <img src={Choose} alt=\"Search Screenshot\" className=\"cs-img-small\" />\n          <img\n            src={SignUp}\n            alt=\"Requests Modal Screenshot\"\n            className=\"cs-img-small\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Challenges</header>\n          <article>\n            One of the challenges I faced when creating the album upload page on\n            AmpCamp was asynchronous exception handling. Occasionally, albums\n            would fail to upload to S3 part of the way through, leaving the\n            artist with a semi-uploaded album. The way I got around this was to\n            have the app stay on the upload page until the upload was complete,\n            afterwhich, it would redirect to the new album show page. If the\n            upload failed, the local state of the upload page would be preserved\n            (so the user didn’t have to recreate the album) and a user-friendly\n            error message would prompt the user to “try again in a moment”. This\n            taught me the importance of good error handling as it pertains to\n            user experience.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-wrapper cs-img-margin\">\n          <img\n            src={UploadError}\n            alt=\"Requests Modal Screenshot\"\n            className=\"cs-img\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Conclusion</header>\n          <article>\n            The result of our work was a fully functional indie streaming site,\n            with upload and download functionality. I plan to optimize AmpCamp\n            further as time goes on, and I hope to make the audio player\n            compatible with mobile devices as well. All in all, AmpCamp was a\n            great learning experience, and it taught me how to create bigger web\n            apps with more complex functionality.\n          </article>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AmpCamp;\n"]},"metadata":{},"sourceType":"module"}