{"ast":null,"code":"var _jsxFileName = \"/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/Fishhook.jsx\";\nimport React from \"react\";\nimport Splash from \"../../assets/screenshots/fishhook/fh-splash.png\";\nimport Search from \"../../assets/screenshots/fishhook/fh-search.png\";\nimport Requests from \"../../assets/screenshots/fishhook/fh-requests.png\";\nimport Feed from \"../../assets/screenshots/fishhook/fh-feed.png\";\nimport Friends from \"../../assets/screenshots/fishhook/fh-friends.png\";\nimport UserFeed from \"../../assets/screenshots/fishhook/fh-userfeed.png\";\nimport Update from \"../../assets/screenshots/fishhook/fh-update.png\";\nimport Create from \"../../assets/screenshots/fishhook/fh-create.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/fishhook.css\";\n\nconst Fishhook = () => {\n  return React.createElement(\"div\", {\n    id: \"fishhook-wrapper\",\n    className: \"cs-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"cs-topper cs-white-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"vert-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"cs-topper-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Fishhook\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Campbell Oleson\"), React.createElement(\"div\", {\n    className: \"cs-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://fish-hook.herokuapp.com/#/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Live\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"|\"), React.createElement(\"a\", {\n    href: \"https://github.com/CampbellOleson/fishhook\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"GitHub\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"July 2019\")), React.createElement(\"summary\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"I engineered a social media site specifically tailored for the fishing community. The primary goal of this website is to give fishing enthusiasts an online platform where they can connect with one another, share their best catches, and discover new fishing spots.\"))), React.createElement(\"div\", {\n    className: \"vert-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"catch-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Splash,\n    alt: \"Splash Page Screenshot\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Assignment\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"During the later portion of my software development course with App Academy, I was tasked with creating a full-stack web application. The purpose and implementation details of the website were up to me to figure out. I noticed an abundance of fishing-themed Facebook groups, and I myself am an avid fly-fisher, so for my project I decided to create a social media platform specifically designed for people who love to fish (and post about it online).\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Planning\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"When I set out to design and architect Fishhook, I began by determining the core functionality that it would need to include. Fishhook would have to provide a way for users to find and connect with one another. Furthermore, Fishhook users would need to be able to personalize their account and post content for their friends to see. It sounded simple in the early stages, but as I delved further into it, I determined that my app would need user entities with associated post entities, a friend requests system, a search component, profile page components, feed components, and much more.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Before I started writing any code, I sketched out the backend architecture of my app, as well as all the frontend views that it would include. App Academy gave me a stringent time limit for the completion of this assignment, so after my pen-and-paper wireframes were complete, I began developing.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Features and Functionality\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"I implemented Fishhook using Ruby on Rails for the backend and PostgreSQL for the database. I chose this stack so I could leverage Rails\\u2019s convention-over-configuration philosophy for quick development and SQL to manage relationships between different entities in my database. I then tested my backend API using Postman before moving on.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"On the frontend, I used Redux to manage application state and ReactJS to create a responsive user interface. I employed AJAX to send asynchronous requests to my backend API.\"), React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Users of Fishhook can search for other users and friend-request them. To friend-request a user, navigate to their profile page and clicking the \\u201CAdd Friend\\u201D button. Incoming friend requests are found in a dropdown modal attached to the top nav. Users can accept incoming friend requests, or delete them.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-small-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Search,\n    alt: \"Search Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: Requests,\n    alt: \"Requests Modal Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Once you\\u2019ve befriended a user, their posts can be found in the \\u201CFeed\\u201D component of the app. Navigate to a user\\u2019s profile page to see all the content that they have posted. Similarly, to see a user\\u2019s friends, navigate to their profile page and click on the \\u201Cfriends\\u201D tab.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-small-wrapper cs-img-margin cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: UserFeed,\n    alt: \"User Feed Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: Friends,\n    alt: \"Friends Screenshot\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"cs-img-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Feed,\n    alt: \"Feed Screenshot\",\n    className: \"cs-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Challenges\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Developing Fishhook presented me with a variety of challenges as a new programmer. The first challenge I came across was how to create \\u201Cfriend-requests\\u201D between users that would associate the users as \\u201Cfriends\\u201D when accepted and allow them to see each other's posts.\"), React.createElement(\"article\", {\n    className: \"cs-bmo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"I overcame this by creating a \\u201Crequests\\u201D joins table using Ruby on Rails ORM. The table has columns for the \\u201Crequester_id\\u201D, the \\u201Crequested_id\\u201D, and a boolean status field indicating whether or not the request had been accepted. The friendships controller creates an entry in this table whenever a user sends a friend request. Once the receiving user accepts the request, the status field is updated, and the entry becomes a \\u201Cfriends\\u201D association between the users.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-img-small-wrapper cs-img-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Create,\n    alt: \"Create snippet\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: Update,\n    alt: \"Update snippet\",\n    className: \"cs-img-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"I ran into a few difficult bugs in this project, the most frustrating of which was an error in one of my Redux reducers. I had a JavaScript Object storing arrays. When I tried to copy this object into the updated application state, I used Object.assign(), which created a shallow copy, and preserved the object ids of the arrays inside.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"I spent hours searching for the cause of the unexpected behavior that followed. Finally, when logging my application state changes with Chrome DevTools, I noticed that the contents of the arrays from previous state changes retroactively updated with each new state change. The \\u201Cold arrays\\u201D would update to have the same contents as the \\u201Cnew arrays\\u201D. This pointed me towards the source of the problem, and taught me a valuable lesson about object identity in JavaScript.\"))), React.createElement(\"div\", {\n    className: \"hor-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cs-textblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Outcome\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Fishhook was my first full-stack project at App Academy, and my first real venture into software development. It\\u2019s important to note that this project served as an educational experience for me. Not every aspect of this app is production quality, and there are still plenty of features for me to improve upon.\"), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"I plan to continue to work on Fishhook to improve the user interface, make the layout more responsive to different device sizes, and add some more functionality. All things considered, Fishhook turned out to be an excellent learning experience, and gave me a strong sense of the fundamentals of web development.\"))));\n};\n\nexport default Fishhook;","map":{"version":3,"sources":["/Users/campbelloleson/Desktop/portfolio-website/src/components/case-studies/Fishhook.jsx"],"names":["React","Splash","Search","Requests","Feed","Friends","UserFeed","Update","Create","Fishhook"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Splash from \"../../assets/screenshots/fishhook/fh-splash.png\";\nimport Search from \"../../assets/screenshots/fishhook/fh-search.png\";\nimport Requests from \"../../assets/screenshots/fishhook/fh-requests.png\";\nimport Feed from \"../../assets/screenshots/fishhook/fh-feed.png\";\nimport Friends from \"../../assets/screenshots/fishhook/fh-friends.png\";\nimport UserFeed from \"../../assets/screenshots/fishhook/fh-userfeed.png\";\nimport Update from \"../../assets/screenshots/fishhook/fh-update.png\";\nimport Create from \"../../assets/screenshots/fishhook/fh-create.png\";\nimport \"../../stylesheets/case-studies/case-studies.css\";\nimport \"../../stylesheets/case-studies/fishhook.css\";\n\nconst Fishhook = () => {\n  return (\n    <div id=\"fishhook-wrapper\" className=\"cs-wrapper\">\n      <div className=\"cs-nav\" />\n      <section className=\"cs-topper cs-white-container\">\n        <div className=\"vert-center\">\n          <section className=\"cs-topper-info\">\n            <header>Fishhook</header>\n            <div>\n              <p>Campbell Oleson</p>\n              {/*  */}\n              <div className=\"cs-links\">\n                <a href=\"https://fish-hook.herokuapp.com/#/\">Live</a>\n                <p>|</p>\n                <a href=\"https://github.com/CampbellOleson/fishhook\">GitHub</a>\n              </div>\n              {/*  */}\n              <p>July 2019</p>\n            </div>\n            <summary>\n              I engineered a social media site specifically tailored for the\n              fishing community. The primary goal of this website is to give\n              fishing enthusiasts an online platform where they can connect with\n              one another, share their best catches, and discover new fishing\n              spots.\n            </summary>\n          </section>\n        </div>\n        <div className=\"vert-center\">\n          <div id=\"catch-img\" />\n        </div>\n      </section>\n\n      <div className=\"cs-img-wrapper cs-img-margin cs-tpf cs-tmo\">\n        <img src={Splash} alt=\"Splash Page Screenshot\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Assignment</header>\n          <article>\n            During the later portion of my software development course with App\n            Academy, I was tasked with creating a full-stack web application.\n            The purpose and implementation details of the website were up to me\n            to figure out. I noticed an abundance of fishing-themed Facebook\n            groups, and I myself am an avid fly-fisher, so for my project I\n            decided to create a social media platform specifically designed for\n            people who love to fish (and post about it online).\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Planning</header>\n          <article>\n            When I set out to design and architect Fishhook, I began by\n            determining the core functionality that it would need to include.\n            Fishhook would have to provide a way for users to find and connect\n            with one another. Furthermore, Fishhook users would need to be able\n            to personalize their account and post content for their friends to\n            see. It sounded simple in the early stages, but as I delved further\n            into it, I determined that my app would need user entities with\n            associated post entities, a friend requests system, a search\n            component, profile page components, feed components, and much more.\n          </article>\n          <article>\n            Before I started writing any code, I sketched out the backend\n            architecture of my app, as well as all the frontend views that it\n            would include. App Academy gave me a stringent time limit for the\n            completion of this assignment, so after my pen-and-paper wireframes\n            were complete, I began developing.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Features and Functionality</header>\n          <article>\n            I implemented Fishhook using Ruby on Rails for the backend and\n            PostgreSQL for the database. I chose this stack so I could leverage\n            Rails’s convention-over-configuration philosophy for quick\n            development and SQL to manage relationships between different\n            entities in my database. I then tested my backend API using Postman\n            before moving on.\n          </article>\n          <article>\n            On the frontend, I used Redux to manage application state and\n            ReactJS to create a responsive user interface. I employed AJAX to\n            send asynchronous requests to my backend API.\n          </article>\n          <article className=\"cs-bmo\">\n            Users of Fishhook can search for other users and friend-request\n            them. To friend-request a user, navigate to their profile page and\n            clicking the “Add Friend” button. Incoming friend requests are found\n            in a dropdown modal attached to the top nav. Users can accept\n            incoming friend requests, or delete them.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-small-wrapper cs-img-margin\">\n          <img src={Search} alt=\"Search Screenshot\" className=\"cs-img-small\" />\n          <img\n            src={Requests}\n            alt=\"Requests Modal Screenshot\"\n            className=\"cs-img-small\"\n          />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <article className=\"cs-bmo\">\n            Once you’ve befriended a user, their posts can be found in the\n            “Feed” component of the app. Navigate to a user’s profile page to\n            see all the content that they have posted. Similarly, to see a\n            user’s friends, navigate to their profile page and click on the\n            “friends” tab.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-small-wrapper cs-img-margin cs-bmo\">\n          <img\n            src={UserFeed}\n            alt=\"User Feed Screenshot\"\n            className=\"cs-img-small\"\n          />\n          <img\n            src={Friends}\n            alt=\"Friends Screenshot\"\n            className=\"cs-img-small\"\n          />\n        </div>\n      </div>\n\n      <div className=\"cs-img-wrapper cs-img-margin\">\n        <img src={Feed} alt=\"Feed Screenshot\" className=\"cs-img\" />\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock cs-bmo\">\n          <header>Challenges</header>\n          <article>\n            Developing Fishhook presented me with a variety of challenges as a\n            new programmer. The first challenge I came across was how to create\n            “friend-requests” between users that would associate the users as\n            “friends” when accepted and allow them to see each other's posts.\n          </article>\n          <article className=\"cs-bmo\">\n            I overcame this by creating a “requests” joins table using Ruby on\n            Rails ORM. The table has columns for the “requester_id”, the\n            “requested_id”, and a boolean status field indicating whether or not\n            the request had been accepted. The friendships controller creates an\n            entry in this table whenever a user sends a friend request. Once the\n            receiving user accepts the request, the status field is updated, and\n            the entry becomes a “friends” association between the users.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-img-small-wrapper cs-img-margin\">\n          <img src={Create} alt=\"Create snippet\" className=\"cs-img-small\" />\n          <img src={Update} alt=\"Update snippet\" className=\"cs-img-small\" />\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <article>\n            I ran into a few difficult bugs in this project, the most\n            frustrating of which was an error in one of my Redux reducers. I had\n            a JavaScript Object storing arrays. When I tried to copy this object\n            into the updated application state, I used Object.assign(), which\n            created a shallow copy, and preserved the object ids of the arrays\n            inside.\n          </article>\n          <article>\n            I spent hours searching for the cause of the unexpected behavior\n            that followed. Finally, when logging my application state changes\n            with Chrome DevTools, I noticed that the contents of the arrays from\n            previous state changes retroactively updated with each new state\n            change. The “old arrays” would update to have the same contents as\n            the “new arrays”. This pointed me towards the source of the problem,\n            and taught me a valuable lesson about object identity in JavaScript.\n          </article>\n        </div>\n      </div>\n\n      <div className=\"hor-center\">\n        <div className=\"cs-textblock\">\n          <header>Outcome</header>\n          <article>\n            Fishhook was my first full-stack project at App Academy, and my\n            first real venture into software development. It’s important to note\n            that this project served as an educational experience for me. Not\n            every aspect of this app is production quality, and there are still\n            plenty of features for me to improve upon.\n          </article>\n          <article>\n            I plan to continue to work on Fishhook to improve the user\n            interface, make the layout more responsive to different device\n            sizes, and add some more functionality. All things considered,\n            Fishhook turned out to be an excellent learning experience, and gave\n            me a strong sense of the fundamentals of web development.\n          </article>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Fishhook;\n"]},"metadata":{},"sourceType":"module"}